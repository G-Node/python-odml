sudo: required
dist: trusty

language: python

matrix:
  allow_failures:
    - os: linux
      python: "3.9-dev"
      dist: bionic

  include:
    - os: linux
      python: "2.7"
    - os: linux
      python: "3.5"
    - os: linux
      python: "3.6"
      env: COVERALLS=1
    - os: linux
      python: "3.7"
      dist: xenial
    - os: linux
      python: "3.8"
      dist: xenial
    - os: linux
      python: "3.9-dev"
      dist: bionic

    - os: osx
      language: generic
      env:
        - OSXENV=2.7.14
    - os: osx
      language: generic
      env:
        - OSXENV=3.6.0
    - os: osx
      language: generic
      env:
        - OSXENV=3.7.0
    - os: osx
      language: generic
      env:
        - OSXENV=3.8.0

install:
  - export PYVER=${TRAVIS_PYTHON_VERSION:0:1}
  - if [ $PYVER = 3 ]; then
      export PYCMD=python3;
      export PIPCMD=pip3;
    else
      export PYCMD=python;
      export PIPCMD=pip;
    fi;

  - if [ $COVERALLS = 1 ]; then
        $PIPCMD install --upgrade coveralls;
    fi;

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew install pyenv;
      brew upgrade pyenv;
      brew install pyenv-virtualenv;
      eval "$(pyenv init -)";
      eval "$(pyenv virtualenv-init -)";
      pyenv install $OSXENV;
      pyenv virtualenv $OSXENV venv;
      pyenv activate venv;
      which python;
      python --version;
      which pip;
      export PYCMD=python;
      export PIPCMD=pip;
    fi;

  - $PIPCMD install lxml enum34 pyyaml rdflib

script:
  - which $PYCMD
  - $PYCMD setup.py build
  - if [ $COVERALLS = 1 ]; then
        coverage${PYVER} run --source=odml setup.py test && coverage${PYVER} report -m;
    else
        $PYCMD setup.py test;
    fi;

after_success:
- if [ $COVERALLS = 1 ]; then coveralls; fi;
